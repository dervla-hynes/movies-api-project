!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t){var n=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(o,i){function c(e){try{a(r.next(e))}catch(e){i(e)}}function u(e){try{a(r.throw(e))}catch(e){i(e)}}function a(e){var t;e.done?o(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,u)}a((r=r.apply(e,t||[])).next())}))},r=this&&this.__generator||function(e,t){var n,r,o,i,c={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:u(0),throw:u(1),return:u(2)},"function"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function u(i){return function(u){return function(i){if(n)throw new TypeError("Generator is already executing.");for(;c;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return c.label++,{value:i[1],done:!1};case 5:c.label++,r=i[1],i=[0];continue;case 7:i=c.ops.pop(),c.trys.pop();continue;default:if(!(o=(o=c.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){c=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){c.label=i[1];break}if(6===i[0]&&c.label<o[1]){c.label=o[1],o=i;break}if(o&&c.label<o[2]){c.label=o[2],c.ops.push(i);break}o[2]&&c.ops.pop(),c.trys.pop();continue}i=t.call(e,c)}catch(e){i=[6,e],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,u])}}},o="movie",i="",c=function(e){return n(void 0,void 0,void 0,(function(){var t;return r(this,(function(n){switch(n.label){case 0:return t="",""===i?[3,3]:(t="https://www.omdbapi.com/?apikey=bad11b7b&s="+e+"&y="+i,[4,fetch(t)]);case 1:return[4,n.sent().json()];case 2:return[2,n.sent()];case 3:return t="https://www.omdbapi.com/?apikey=bad11b7b&s="+e,[4,fetch(t)];case 4:return[4,n.sent().json()];case 5:return[2,n.sent()]}}))}))},u=function(){c(o).then((function(e){console.log(e);var t=document.getElementById("search-header"),n=document.getElementById("movies"),r=document.getElementById("years");!function(e,t,n){t.innerHTML="",n.innerHTML="",e.innerHTML='Results for movies containing "'+o+'":'}(t,n,r),e.Search.forEach((function(e){!function(e,t){var n=document.createElement("li");"N/A"===e.Poster?n.innerHTML="<p>"+e.Title+" , "+e.Year+'</p><img src="../assets/popcorn.jpg" alt=""><p id="hidden-box">'+e.Plot+"</p>":n.innerHTML="<p>"+e.Title+" , "+e.Year+'</p><img src="'+e.Poster+'" alt=""><p id="hidden-box">'+e.Plot+"</p>",t.append(n)}(e,n),e.Year.length<5&&!document.getElementById(""+e.Year)&&function(e,t){var n=document.createElement("li");n.innerHTML='<button id="'+e.Year+'">'+e.Year+"</button>",t.append(n),$("#"+e.Year).click((function(){i=""+e.Year,c(o),u()}))}(e,r)}))}))};u();document.getElementById("search-button").addEventListener("click",(function(){var e=$("#movie").val().toString();o=e,console.log(o),u()})),$("#dropbtn").click((function(){$("#myDropdown").toggle()})),$("#favouritesbtn").click((function(){$("#favourites").toggle()}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,